// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.AUTH = "Veuillez autoriser cette application à permettre la sauvegarde de votre travail et à l’autoriser de le partager avec vous.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.CHAT = "Discuter avec votre collaborateur en tapant dans cette zone !";
Blockly.Msg.COLLAPSE_ALL = "Réduire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Réduire le bloc";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "mélanger";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mélange deux couleurs ensemble avec un ratio donné (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur aléatoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorer avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Créer une couleur avec la quantité spécifiée de rouge, vert et bleu. Toutes les valeurs doivent être entre 0 et 100.";
Blockly.Msg.COMMENT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.COMMENT_TITLE = "Program Comment";  // untranslated
Blockly.Msg.COMMENT_TOOLTIP = "Comment Text";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "sortir de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuer avec la prochaine itération de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait être utilisé que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each pour chaque bloc";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "dans la liste";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "pour chaque élément";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque élément dans une liste, donner la valeur de l’élément à la variable '%1', puis exécuter certains ordres.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "de %1 à %2 par %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "compter avec";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire en sorte que la variable %1 prenne les valeurs depuis le numéro de début jusqu’au numéro de fin, en s’incrémentant de l’intervalle spécifié, et exécuter les ordres spécifiés.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "http://code.google.com/p/blockly/wiki/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "répéter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "répéter";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Exécuter certains ordres plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http://code.google.com/p/blockly/wiki/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "répéter jusqu’à";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "répéter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu’une valeur est fausse, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu’une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DISABLE_BLOCK = "Désactiver le bloc";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.EXPAND_ALL = "Développer les blocs";
Blockly.Msg.EXPAND_BLOCK = "Développer le bloc";
Blockly.Msg.EXPANSION_ELEVATION_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_ELEVATION_TOOLTI = "Gripper Servo Elevation";  // untranslated
Blockly.Msg.EXPANSION_EXP1OFF_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP1OFF_TOOLTIP = "Turn Expansion 1 +3.3V Power Off";  // untranslated
Blockly.Msg.EXPANSION_EXP1ON_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP1ON_TOOLTIP = "Turn Expansion 1 +3.3V Power On";  // untranslated
Blockly.Msg.EXPANSION_EXP1_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP1_OFF = "expansion 1 power off";  // untranslated
Blockly.Msg.EXPANSION_EXP1_ON = "expansion 1 power on";  // untranslated
Blockly.Msg.EXPANSION_EXP1_TOOLTIP = "Expansion 1 Power Control";  // untranslated
Blockly.Msg.EXPANSION_EXP2OFF_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP2OFF_TOOLTIP = "Turn Expansion 2 +3.3V Power Off";  // untranslated
Blockly.Msg.EXPANSION_EXP2ON_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP2ON_TOOLTIP = "Turn Expansion 2 +3.3V Power On";  // untranslated
Blockly.Msg.EXPANSION_EXP2_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_EXP2_OFF = "expansion 2 power off";  // untranslated
Blockly.Msg.EXPANSION_EXP2_ON = "expansion 2 power on";  // untranslated
Blockly.Msg.EXPANSION_EXP2_TOOLTIP = "Expansion 2 Power Control";  // untranslated
Blockly.Msg.EXPANSION_GRIPPER_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_GRIPPER_TOOLTIP = "Gripper Servo Open/Close";  // untranslated
Blockly.Msg.EXPANSION_SERVOOFF_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_SERVOOFF_TOOLTIP = "Turn Servo +5V Power Off";  // untranslated
Blockly.Msg.EXPANSION_SERVOON_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_SERVOON_TOOLTIP = "Turn Servo +5V Power On";  // untranslated
Blockly.Msg.EXPANSION_SERVO_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.EXPANSION_SERVO_OFF = "servo power off";  // untranslated
Blockly.Msg.EXPANSION_SERVO_ON = "servo power on";  // untranslated
Blockly.Msg.EXPANSION_SERVO_TOOLTIP = "Servo Power Control";  // untranslated
Blockly.Msg.EXTERNAL_INPUTS = "Entrées externes";
Blockly.Msg.HELP = "Aide";
Blockly.Msg.INLINE_INPUTS = "Entrées en ligne";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "créer une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "créer une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un élément à la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Créer une liste avec un nombre quelconque d’éléments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aléatoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu’à # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu’à #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu’à la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le début";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crée une copie de la partie spécifiée d’une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la première occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la dernière occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie 0 si le texte n’est pas trouvé.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d’une liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "créer une liste avec l’élément %1 répété %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insérer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insère l’élément au début d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insère l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insère l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l’élément à la fin d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insère l’élément au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un élément au hasard dans une liste.";
Blockly.Msg.LISTS_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http://code.google.com/p/blockly/wiki/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entrées sont égales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la première entrée est plus grande ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entrées ne sont pas égales.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http://code.google.com/p/blockly/wiki/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http://code.google.com/p/blockly/wiki/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entrées sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entrées est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Vérifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai' ; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la différence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MODULO = "Return the remainder of the division operation.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre élevé à la puissance du second.";
Blockly.Msg.MATH_BITWISE_AND = "&";  // untranslated
Blockly.Msg.MATH_BITWISE_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MATH_BITWISE_OR = "|";  // untranslated
Blockly.Msg.MATH_BITWISE_TOOLTIP = "Bitwise Operations";  // untranslated
Blockly.Msg.MATH_BITWISE_XOR = "^";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "de";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "incrémenter";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre à la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre à être entre les limites spécifiées (incluses).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "/";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est négatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_SYMBOL = "%";  // untranslated
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division des deux nombres.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "*";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "médiane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "élément aléatoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "écart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre médian dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des élément(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un élément dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l’écart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction aléatoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction aléatoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier aléatoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
Blockly.Msg.MATH_RANDOM_TITLE = "Random Number (0-99)";  // untranslated
Blockly.Msg.MATH_RANDOM_TOOLTIP = "Return Random Number";  // untranslated
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir à l’inférieur";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir au supérieur";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SHIFT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MATH_SHIFT_LEFT = "<<";  // untranslated
Blockly.Msg.MATH_SHIFT_RIGHT = ">>";  // untranslated
Blockly.Msg.MATH_SHIFT_TOOLTIP = "Bit Shift Operations";  // untranslated
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolu";
Blockly.Msg.MATH_SINGLE_OP_NEGATION = "negate";  // untranslated
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carrée";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l’opposé d’un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carrée d’un nombre.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l’arccosinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l’arcsinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l’arctangente d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d’un angle en degrés (pas en radians).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.MULTIMEDIA_DISPLAYBMP_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_DISPLAYBMP_TOOLTIP = "Display BMP File on OLED";  // untranslated
Blockly.Msg.MULTIMEDIA_DOUPDATE_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_DOUPDATE_TOOLTIP = "Do an Update to the OLED";  // untranslated
Blockly.Msg.MULTIMEDIA_HIGH = "volume high";  // untranslated
Blockly.Msg.MULTIMEDIA_LOW = "volume low";  // untranslated
Blockly.Msg.MULTIMEDIA_MEDIUM = "volume medium";  // untranslated
Blockly.Msg.MULTIMEDIA_MUTE = "volume mute";  // untranslated
Blockly.Msg.MULTIMEDIA_PLAYWAV_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_PLAYWAV_TOOLTIP = "Play WAV File on Jade Robot";  // untranslated
Blockly.Msg.MULTIMEDIA_POLLWAV_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_POLLWAV_TITLE = "playing active";  // untranslated
Blockly.Msg.MULTIMEDIA_POLLWAV_TOOLTIP = "Return Not Zero if WAV File still playing";  // untranslated
Blockly.Msg.MULTIMEDIA_STOPUPDATE_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_STOPUPDATE_TOOLTIP = "Stop Updating the OLED";  // untranslated
Blockly.Msg.MULTIMEDIA_VOLUME_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.MULTIMEDIA_VOLUME_TOOLTIP = "Set Speaker Volume";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nom de la nouvelle variable :";
Blockly.Msg.OLED_COLOR_BLACK = "color black";  // untranslated
Blockly.Msg.OLED_COLOR_GREEN = "color green";  // untranslated
Blockly.Msg.OLED_COLOR_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.OLED_COLOR_TOOLTIP = "Set OLED Draw Color";  // untranslated
Blockly.Msg.OLED_DRAW_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.OLED_DRAW_LINE = "draw line";  // untranslated
Blockly.Msg.OLED_DRAW_RECT = "draw rectangle";  // untranslated
Blockly.Msg.OLED_DRAW_TOOLTIP = "Draw from Cursor to End";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriser les déclarations";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur et utiliser son résultat.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Créer '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faire quelque chose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "à";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crée une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = "functionName";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crée une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des paramètres dupliqués.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la définition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n’être utilisé que dans une définition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l’entrée :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Ajouter une entrée à la fonction.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entrées";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables '%1' en :";
Blockly.Msg.ROBOT_LED_FLASH = "led flash";  // untranslated
Blockly.Msg.ROBOT_LED_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.ROBOT_LED_OFF = "led off";  // untranslated
Blockly.Msg.ROBOT_LED_ON = "led on";  // untranslated
Blockly.Msg.ROBOT_LED_TOOLTIP = "Set LED";  // untranslated
Blockly.Msg.SENSOR_BATTERY_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_BATTERY_TITLE = "battery level";  // untranslated
Blockly.Msg.SENSOR_BATTERY_TOOLTIP = "Return Battery Level";  // untranslated
Blockly.Msg.SENSOR_BUTTON_DOWN = "button down pressed";  // untranslated
Blockly.Msg.SENSOR_BUTTON_ENTER = "button enter pressed";  // untranslated
Blockly.Msg.SENSOR_BUTTON_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_BUTTON_LEFT = "button left pressed";  // untranslated
Blockly.Msg.SENSOR_BUTTON_RIGHT = "button right pressed";  // untranslated
Blockly.Msg.SENSOR_BUTTON_TOOLTIP = "Return Button State";  // untranslated
Blockly.Msg.SENSOR_BUTTON_UP = "button up pressed";  // untranslated
Blockly.Msg.SENSOR_ROBOTLIGHT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_ROBOTLIGHT_LEFT = "light left";  // untranslated
Blockly.Msg.SENSOR_ROBOTLIGHT_REAR = "light rear";  // untranslated
Blockly.Msg.SENSOR_ROBOTLIGHT_RIGHT = "light right";  // untranslated
Blockly.Msg.SENSOR_ROBOTLIGHT_TOOLTIP = "Returns Light Sensor.";  // untranslated
Blockly.Msg.SENSOR_ROBOTLINE_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_ROBOTLINE_LEFT = "line left";  // untranslated
Blockly.Msg.SENSOR_ROBOTLINE_MIDDLE = "line middle";  // untranslated
Blockly.Msg.SENSOR_ROBOTLINE_RIGHT = "line right";  // untranslated
Blockly.Msg.SENSOR_ROBOTLINE_TOOLTIP = "Returns Line Sensor.";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_LEFTFRONT = "object left front";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_LEFTSIDE = "object left side";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_REAR = "object rear";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_RIGHTFRONT = "object right front";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_RIGHTSIDE = "object right side";  // untranslated
Blockly.Msg.SENSOR_ROBOTOBJECT_TOOLTIP = "Returns Object Sensor.";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_BLUE = "spectrometer blue";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_GREEN = "spectrometer green";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_IR880 = "spectrometer 880nm";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_IR940 = "spectrometer 940nm";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_RED = "spectrometer red";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_TOOLTIP = "Return Spectrometer Reading";  // untranslated
Blockly.Msg.SENSOR_SPECTROMETER_YELLOW = "spectrometer yellow";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "à";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte à la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Adjusting_text_case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au Début De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la première lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la dernière lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre à la position indiquée.";
Blockly.Msg.TEXT_CLEARDISPLAY_TOOLTIP = "Clear OLED Display";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un élément au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_DRAWNUMBER_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_DRAWNUMBER_TOOLTIP = "Draw the specified number";  // untranslated
Blockly.Msg.TEXT_DRAWTEXT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_DRAWTEXT_TOOLTIP = "Draw the specified text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu’à la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu’à la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu’à la dernière lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-chaîne depuis la première lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-chaîne depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-chaîne depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiquée du texte.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la première occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la dernière occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie 0 si la chaîne n’est pas trouvée.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "créer le texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Créer un morceau de texte en agrégeant un nombre quelconque d’éléments.";
Blockly.Msg.TEXT_LEFTMOTOR_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_LEFTMOTOR_TITLE = "Set Left Motor %1";  // untranslated
Blockly.Msg.TEXT_LEFTMOTOR_TOOLTIP = "Specify the Value for the Left Motor.";  // untranslated
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_MOTORSFORWARD_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSFORWARD_TITLE = "Move Robot Forward";  // untranslated
Blockly.Msg.TEXT_MOTORSLEFT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSLEFT_TITLE = "Turn Left";  // untranslated
Blockly.Msg.TEXT_MOTORSLEFT_TOOLTIP = "Turn Robot Left";  // untranslated
Blockly.Msg.TEXT_MOTORSREVERSE_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSREVERSE_TITLE = "Robot Reverse";  // untranslated
Blockly.Msg.TEXT_MOTORSREVERSE_TOOLTIP = "Move Robot Backward";  // untranslated
Blockly.Msg.TEXT_MOTORSRIGHT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSRIGHT_TITLE = "Turn Right";  // untranslated
Blockly.Msg.TEXT_MOTORSRIGHT_TOOLTIP = "Turn Robot Right";  // untranslated
Blockly.Msg.TEXT_MOTORSSTOP_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSSTOP_TITLE = "Stop Robot";  // untranslated
Blockly.Msg.TEXT_MOTORSSTOP_TOOLTIP = "Stop Robot";  // untranslated
Blockly.Msg.TEXT_MOTORSSTUTTER_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_MOTORSSTUTTER_TITLE = "Robot Stutter";  // untranslated
Blockly.Msg.TEXT_MOTORSSTUTTER_TOOLTIP = "Robot Stutter";  // untranslated
Blockly.Msg.TEXT_OLEDCLEARDISPLAY_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_OLEDCURSOR_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_OLEDCURSOR_TOOLTIP = "Set the Draw Position";  // untranslated
Blockly.Msg.TEXT_OLEDEND_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_OLEDEND_TOOLTIP = "Set the End Draw Position";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur spécifié.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Getting_input_from_the_user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_RIGHTMOTOR_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_RIGHTMOTOR_TOOLTIP = "Specify the Value for the Right Motor.";  // untranslated
Blockly.Msg.TEXT_ROBOTDELAY_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_ROBOTDELAY_TITLE = "Delay in ms %1";  // untranslated
Blockly.Msg.TEXT_SETMOTORS_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.TEXT_SETMOTORS_TOOLTIP = "Specify the Value for the Motors.";  // untranslated
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Trimming_%28removing%29_spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux côtés";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du côté gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du côté droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprimés d’un bout ou des deux.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "élément";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Créer 'fixer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Créer 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://www.mimetics.ca/docs/Scratch%20Programming%20Outline%20-%202014.12.30.pdf";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "à";
Blockly.Msg.VARIABLES_SET_TITLE = "fixer";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu’elle soit égale à la valeur de l’entrée.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;